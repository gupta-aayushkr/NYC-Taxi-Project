{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{"workspaceName":{"type":"string","metadata":"Workspace name","defaultValue":"synapseproj-ws"}},"variables":{"workspaceId":"[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"},"resources":[{"name":"[concat(parameters('workspaceName'), '/pl_create_gold_trip_data_green_agg')]","type":"Microsoft.Synapse/workspaces/pipelines","apiVersion":"2019-06-01-preview","properties":{"activities":[{"name":"Create Gold Trip Data Green Agg","type":"SynapseNotebook","dependsOn":[],"policy":{"timeout":"0.12:00:00","retry":0,"retryIntervalInSeconds":30,"secureOutput":false,"secureInput":false},"userProperties":[],"typeProperties":{"notebook":{"referenceName":"1_spark_create_gold_trip_data_green_agg","type":"NotebookReference"},"snapshot":true,"sparkPool":{"referenceName":"synapsepool","type":"BigDataPoolReference"},"executorSize":"Small","conf":{"spark.dynamicAllocation.enabled":false,"spark.dynamicAllocation.minExecutors":1,"spark.dynamicAllocation.maxExecutors":1},"driverSize":"Small","numExecutors":1}}],"policy":{"elapsedTimeMetric":{}},"annotations":[],"lastPublishTime":"2024-01-02T14:58:35Z"},"dependsOn":["[concat(variables('workspaceId'), '/notebooks/1_spark_create_gold_trip_data_green_agg')]","[concat(variables('workspaceId'), '/bigDataPools/synapsepool')]"]},{"name":"[concat(parameters('workspaceName'), '/1_spark_create_gold_trip_data_green_agg')]","type":"Microsoft.Synapse/workspaces/notebooks","apiVersion":"2019-06-01-preview","properties":{"nbformat":4,"nbformat_minor":2,"bigDataPool":{"referenceName":"synapsepool","type":"BigDataPoolReference"},"sessionProperties":{"driverMemory":"28g","driverCores":4,"executorMemory":"28g","executorCores":4,"numExecutors":2,"runAsWorkspaceSystemIdentity":false,"conf":{"spark.dynamicAllocation.enabled":"false","spark.dynamicAllocation.minExecutors":"2","spark.dynamicAllocation.maxExecutors":"2","spark.autotune.trackingId":"966057d1-fa8f-40b0-89dd-a2802a219c2a"}},"metadata":{"saveOutput":true,"enableDebugMode":false,"kernelspec":{"name":"synapse_pyspark","display_name":"Synapse PySpark"},"language_info":{"name":"python"},"a365ComputeOptions":{"id":"/subscriptions/66abe16b-9144-4a86-a3de-208a975964b5/resourceGroups/synapse-rg/providers/Microsoft.Synapse/workspaces/synapseproj-ws/bigDataPools/synapsepool","name":"synapsepool","type":"Spark","endpoint":"https://synapseproj-ws.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/synapsepool","auth":{"type":"AAD","authResource":"https://dev.azuresynapse.net","authHeader":null},"sparkVersion":"3.3","nodeCount":3,"cores":4,"memory":28,"extraHeader":null},"sessionKeepAliveTimeout":30},"cells":[{"cell_type":"markdown","metadata":{"nteract":{"transient":{"deleting":false}}},"source":["## Trip Data Aggregation \n","### Group By Columns\n","1. year\n","2. Month\n","3. Pickup Location ID\n","4. Drop Off Location ID\n","\n","### Aggregated Columns\n","1. Total Trip Count\n","2. Total Fare Amount\n","\n","### Purpose of the notebook\n","\n","Demonstrate the integration between Spark Pool and Serverless SQL Pool\n","\n","1. Create the aggregated table in Spark Pool\n","2. Access the data from Serverless SQL Pool "]},{"cell_type":"code","metadata":{"jupyter":{"source_hidden":false,"outputs_hidden":false},"nteract":{"transient":{"deleting":false}}},"source":["#Set the folder paths so that it can be used later.\n","\n","bronze_folder_path = 'abfss://nyc-taxi-data@synapseprojdl.dfs.core.windows.net/raw'\n","silver_folder_path = 'abfss://nyc-taxi-data@synapseprojdl.dfs.core.windows.net/silver'\n","gold_folder_path = 'abfss://nyc-taxi-data@synapseprojdl.dfs.core.windows.net/gold'"],"outputs":[],"execution_count":8},{"cell_type":"code","metadata":{"jupyter":{"source_hidden":false,"outputs_hidden":false},"nteract":{"transient":{"deleting":false}}},"source":["#Set the spark config to be able to get the partitioned columns year and month as strings rather than integers\n","spark.conf.set(\"spark.sql.sources.partitionColumnTypeInference.enabled\", \"false\")"],"outputs":[],"execution_count":9},{"cell_type":"code","metadata":{"jupyter":{"source_hidden":false,"outputs_hidden":false},"nteract":{"transient":{"deleting":false}},"microsoft":{"language":"sparksql"},"collapsed":false},"source":["%%sql\n","\n","-- Create database to which we are going to write the data\n","\n","CREATE DATABASE IF NOT EXISTS nyc_taxi_ldw_spark\n","LOCATION 'abfss://nyc-taxi-data@synapseprojdl.dfs.core.windows.net/gold';"],"outputs":[],"execution_count":10},{"cell_type":"code","metadata":{"jupyter":{"source_hidden":false,"outputs_hidden":false},"nteract":{"transient":{"deleting":false}}},"source":["# Read the silver data to be processed. \n","trip_data_green_df = spark.read.parquet(f\"{silver_folder_path}/trip_data_green\") "],"outputs":[],"execution_count":11},{"cell_type":"code","metadata":{"jupyter":{"source_hidden":false,"outputs_hidden":false},"nteract":{"transient":{"deleting":false}}},"source":["# Perform the required aggregations\n","# 1. Total trip count\n","# 2. Total fare amount\n","from pyspark.sql.functions import *\n","\n","trip_data_green_agg_df = trip_data_green_df \\\n","                        .groupBy(\"year\", \"month\", \"pu_location_id\", \"do_location_id\") \\\n","                        .agg(count(lit(1)).alias(\"total_trip_count\"),\n","                        round(sum(\"fare_amount\"), 2).alias(\"total_fare_amount\"))"],"outputs":[],"execution_count":12},{"cell_type":"code","metadata":{"jupyter":{"source_hidden":false,"outputs_hidden":false},"nteract":{"transient":{"deleting":false}}},"source":["# Write the aggregated data to the gold table for consumption\n","\n","trip_data_green_agg_df.write.mode(\"overwrite\").partitionBy(\"year\", \"month\").format(\"parquet\").saveAsTable(\"nyc_taxi_ldw_spark.trip_data_green_agg\")"],"outputs":[],"execution_count":13}]},"dependsOn":[]},{"name":"[concat(parameters('workspaceName'), '/synapsepool')]","type":"Microsoft.Synapse/workspaces/bigDataPools","apiVersion":"2019-06-01-preview","properties":{"autoPause":{"enabled":true,"delayInMinutes":5},"autoScale":{"enabled":false,"maxNodeCount":0,"minNodeCount":0},"nodeCount":3,"nodeSize":"Small","nodeSizeFamily":"MemoryOptimized","sparkVersion":"3.3","isComputeIsolationEnabled":false,"sessionLevelPackagesEnabled":true,"annotations":[]},"dependsOn":[],"location":"uksouth"}]}